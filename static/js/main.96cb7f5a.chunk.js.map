{"version":3,"sources":["Projects.js","Contact.js","NavBar.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Projects","className","md","xl","waves","src","alt","href","overlay","fas","icon","color","rounded","Contact","type","id","label","size","FullPageIntroWithFixedNavbar","props","state","collapse","isWideEnough","onClick","bind","this","setState","dark","expand","fixed","isOpen","navbar","left","active","to","align","class","React","Component","FooterPage","fluid","Date","getFullYear","App","NavBar","Footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.96cb7f5a.chunk.js","sourcesContent":["import React from \"react\";\nimport { MDBRow, MDBCol, MDBCardBody, MDBIcon, MDBBtn, MDBView, MDBMask } from \"mdbreact\";\n\nconst Projects = () => {\n    return (\n        <section className=\"text-center my-5\">\n            <h2 className=\"h1-responsive font-weight-bold my-5\">\n                My Projects\n        </h2>\n            <p className=\"grey-text w-responsive mx-auto mb-5\">\n                \n        </p>\n\n            <MDBRow className=\"d-flex justify-content-center\">\n                <MDBCol md=\"6\" xl=\"5\" className=\"mb-4\">\n                    <MDBView className=\"overlay rounded z-depth-2\" waves>\n                        <img\n                            src=\"https://i.imgur.com/7XkeA2d.png\"\n                            alt=\"\"\n                            className=\"img-fluid\"\n                        />\n                        <a href=\"https://jaymak1981.github.io/Marvel-Trivia/\">\n                            <MDBMask overlay=\"white-slight\" />\n                        </a>\n                    </MDBView>\n                    <MDBCardBody className=\"pb-0\">\n                        <a href=\"#!\" className=\"green-text\">\n                            <h5 className=\"font-weight-bold mt-2 mb-3\">\n                                <MDBIcon fas icon=\"chart-line\" className=\"pr-2\" />\n                  Marvel Trivia\n                </h5>\n                        </a>\n                        <h4 className=\"font-weight-bold mb-3\">Marvel Trivia Game</h4>\n                        <p>\n                            The Marvel Cinematic Universe is a shared universe created by Marvel Studios, set primarily in the reality designated as Earth-199999 within Marvel's multiverse system. Starting with Iron Man, the universe is comprised mainly of films independently made by Marvel Studios, that are always set within this same universe, much like Marvel has done with their comics. I have been a Marvel fan since I was a kid, so this project was extra fun for me. This was built using HTML5, CSS and JavaScript.\n              </p>\n                        <MDBBtn color=\"success\" rounded>\n                            View more\n              </MDBBtn>\n                    </MDBCardBody>\n                </MDBCol>\n                <MDBCol md=\"6\" xl=\"5\" className=\"mb-4\">\n                    <MDBView className=\"overlay rounded z-depth-2\" waves>\n                        <img\n                            src=\"https://i.imgur.com/nQqnVDC.png\"\n                            alt=\"\"\n                            className=\"img-fluid\"\n                        />\n                        <a href=\"https://breaking-bad-info.herokuapp.com/\">\n                            <MDBMask overlay=\"white-slight\" />\n                        </a>\n                    </MDBView>\n                    <MDBCardBody className=\"pb-0\">\n                        <a href=\"#!\" className=\"blue-text\">\n                            <h5 className=\"font-weight-bold mt-2 mb-3\">\n                                <MDBIcon icon=\"eye\" className=\"pr-2\" />\n                  Breaking Bad\n                </h5>\n                        </a>\n                        <h4 className=\"font-weight-bold mb-3\">Breaking Bad Searcher</h4>\n                        <p>\n                            Breaking Bad was one of the most successful t.v. shows of all time. This app shows all the main characters of the show and a brief description of their on show life. This project was built using React and React-router.\n              </p>\n                        <MDBBtn color=\"success\" rounded>\n                            View more\n              </MDBBtn>\n                    </MDBCardBody>\n                </MDBCol>\n                <MDBCol md=\"6\" xl=\"5\" className=\"mb-4\">\n                    <MDBView className=\"overlay rounded z-depth-2\" waves>\n                        <img\n                            src=\"https://i.imgur.com/DOCmtvE.png\"\n                            alt=\"\"\n                            className=\"img-fluid\"\n                        />\n                        <a href=\"https://portfoliorater.herokuapp.com/\">\n                            <MDBMask overlay=\"white-slight\" />\n                        </a>\n                    </MDBView>\n                    <MDBCardBody className=\"pb-0\">\n                        <a href=\"#!\" className=\"brown-text\">\n                            <h5 className=\"font-weight-bold mt-2 mb-3\">\n                                <MDBIcon icon=\"camera\" className=\"pr-2\" />\n                  PortfolioRater\n                </h5>\n                        </a>\n                        <h4 className=\"font-weight-bold mb-3\">PortfolioRater</h4>\n                        <p>\n                            This application is named Portfolio Rater. It is a way for users to receive feedback on their professional portfolios. They will be able to post their portfolio to be listed on the website, where other users can comment on the portfolio and provide feedback.\n\n                            This was a Collaborative between Skyler Bond, Chris Albanese and Jarod McGill  \n              </p>\n                        <MDBBtn color=\"success\" rounded>\n                            View more\n              </MDBBtn>\n                    </MDBCardBody>\n                </MDBCol>\n                {/* <MDBCol md=\"6\" xl=\"5\" className=\"mb-4\">\n                    <MDBView className=\"overlay rounded z-depth-2\" waves>\n                        <img\n                            src=\"https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Products/img (56).jpg\"\n                            alt=\"\"\n                            className=\"img-fluid\"\n                        />\n                        <a href=\"#!\">\n                            <MDBMask overlay=\"white-slight\" />\n                        </a>\n                    </MDBView>\n                    <MDBCardBody className=\"pb-0\">\n                        <a href=\"#!\" className=\"cyan-text\">\n                            <h5 className=\"font-weight-bold mt-2 mb-3\">\n                                <MDBIcon icon=\"phone\" className=\"pr-2\" />\n                  Technology\n                </h5>\n                        </a>\n                        <h4 className=\"font-weight-bold mb-3\">Title of the news</h4>\n                        <p>\n                            Neque porro quisquam est, qui dolorem ipsum quia dolor sit\n                            amet, consectetur, adipisci velit cupidatat proident\n                            voluptatem quia numquam.\n              </p>\n                        <MDBBtn color=\"success\" rounded>\n                            MDBView more\n              </MDBBtn>\n                    </MDBCardBody>\n                </MDBCol> */}\n            </MDBRow>\n        </section>\n    );\n}\n\nexport default Projects;","import React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBIcon, MDBBtn, MDBInput } from \"mdbreact\";\n\nconst Contact = () => {\n    return (\n        <MDBContainer>\n            <h2 className=\"h1-responsive font-weight-bold text-center my-5\">\n                Contact us\n      </h2>\n            <p className=\"text-center w-responsive mx-auto pb-5\">\n                Got a project you need done. Let us know today\n      </p>\n            <MDBRow>\n                <MDBCol md=\"9\" className=\"md-0 mb-5\">\n                    <form>\n                        <MDBRow>\n                            <MDBCol md=\"6\">\n                                <div className=\"md-form mb-0\">\n                                    <MDBInput type=\"text\" id=\"contact-name\" label=\"Your name\" />\n                                </div>\n                            </MDBCol>\n                            <MDBCol md=\"6\">\n                                <div className=\"md-form mb-0\">\n                                    <MDBInput\n                                        type=\"text\"\n                                        id=\"contact-email\"\n                                        label=\"Your email\"\n                                    />\n                                </div>\n                            </MDBCol>\n                        </MDBRow>\n                        <MDBRow>\n                            <MDBCol md=\"12\">\n                                <div className=\"md-form mb-0\">\n                                    <MDBInput type=\"text\" id=\"contact-subject\" label=\"Subject\" />\n                                </div>\n                            </MDBCol>\n                        </MDBRow>\n                        <MDBRow>\n                            <MDBCol md=\"12\">\n                                <div className=\"md-form mb-0\">\n                                    <MDBInput\n                                        type=\"textarea\"\n                                        id=\"contact-message\"\n                                        label=\"Your message\"\n                                    />\n                                </div>\n                            </MDBCol>\n                        </MDBRow>\n                    </form>\n                    <div className=\"text-center text-md-left\">\n                        <MDBBtn color=\"primary\" size=\"md\">\n                            Send\n            </MDBBtn>\n                    </div>\n                </MDBCol>\n                <MDBCol md=\"3\" className=\"text-center\">\n                    <ul className=\"list-unstyled mb-0\">\n                        <li>\n                            <MDBIcon icon=\"map-marker-alt\" size=\"2x\" className=\"blue-text\" />\n                            <p>Phoenix, AZ, USA</p>\n                        </li>\n                        <li>\n                            <MDBIcon icon=\"phone\" size=\"2x\" className=\"blue-text mt-4\" />\n                            <p>480-667-8668</p>\n                        </li>\n                        <li>\n                            <MDBIcon icon=\"envelope\" size=\"2x\" className=\"blue-text mt-4\" />\n                            <p>jaymak1231@gmail.com</p>\n                        </li>\n                    </ul>\n                </MDBCol>\n            </MDBRow>\n        </MDBContainer>\n    );\n}\n\nexport default Contact;","import React from 'react';\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBContainer, MDBMask, MDBView } from 'mdbreact';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nclass FullPageIntroWithFixedNavbar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapse: false,\n            isWideEnough: false\n        };\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick() {\n        this.setState({\n            collapse: !this.state.collapse\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <header>\n                    <Router>\n                        <MDBNavbar color=\"black\" dark expand=\"md\" fixed=\"top\">\n                            <MDBNavbarBrand href=\"/\">\n                                <strong>Jarod McGill</strong>\n                            </MDBNavbarBrand>\n                            {!this.state.isWideEnough && <MDBNavbarToggler onClick={this.onClick} />}\n                            <MDBCollapse isOpen={this.state.collapse} navbar>\n                                <MDBNavbarNav left>\n                                    <MDBNavItem active>\n                                        <MDBNavLink to=\"/\">Home</MDBNavLink>\n                                    </MDBNavItem>\n                                    <MDBNavItem>\n                                        <MDBNavLink to=\"./Projects.js\">Projects</MDBNavLink>\n                                    </MDBNavItem>\n                                    <MDBNavItem>\n                                        <MDBNavLink to=\"./Contact\">Contact</MDBNavLink>\n                                    </MDBNavItem>\n                                </MDBNavbarNav>\n                            </MDBCollapse>\n                        </MDBNavbar>\n                    </Router>\n\n                    <MDBView src=\"https://media.tenor.com/images/0797ea67eae15fcb5ed4b0c219dff9c2/tenor.gif\">\n                        <MDBMask overlay=\"black-light\" className=\"flex-center flex-column text-white text-center\">\n                            <h2 className=\"animated fadeInLeftBig slower\">Jarod McGill</h2>\n                            <h5 className=\"animated fadeInRightBig slower\">Developer | Designer</h5>\n                            <br />\n                            <p className=\"animated fadeInLeftBig slower delay-2s\">“Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live”\n― John Woods</p>\n                        </MDBMask>\n                    </MDBView>\n                </header>\n\n                <main>\n                    <MDBContainer className=\"text-center my-5\">\n                        <p align=\"justify\" class=\"animated fadeInDownBig slower delay-1s\">I am a software engineer that has skills in both the back-end of web applications and the front-end. I want a deeper involvement in building out applications. In the next phase of my career, I not only want to use my design skills to make the application look beautiful, but I also want to work on the technically challenging facets of the application too. At my ideal company, I would like to work on a small team (5-8 people) that follows best practices like Test Driven Development and pair programming to help me learn and grow as a developer.</p>\n                    </MDBContainer>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default FullPageIntroWithFixedNavbar;","import React from \"react\";\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\n\nconst FooterPage = () => {\n    return (\n        <MDBFooter color=\"black\" className=\"font-small pt-4 mt-4\">\n            <MDBContainer fluid className=\"text-center text-md-left\">\n                <MDBRow>\n                    <MDBCol md=\"6\">\n                        {/* <h5 className=\"title\"></h5> */}\n                        <p>\n                            “Delivering good software today is often better than perfect software tomorrow, so finish things and ship.”\n                            ― David Thomas, The Pragmatic Programmer: From Journeyman to Master\n            </p>\n                    </MDBCol>\n                    <MDBCol md=\"6\">\n                        <h5 className=\"title\">Links</h5>\n                        <ul>\n                            <li className=\"list-unstyled\">\n                                <button type=\"button\" class=\"btn btn-fb\"><i class=\"fab fa-facebook-f pr-1\"></i> Facebook</button>\n                            </li>\n                            <li className=\"list-unstyled\">\n                                <button type=\"button\" class=\"btn btn-li\"><i class=\"fab fa-linkedin-in pr-1\"></i> Linkedin</button>\n                            </li>\n                            <li className=\"list-unstyled\">\n                                <button type=\"button\" class=\"btn btn-git\"><i class=\"fab fa-github pr-1\"></i> Github</button>\n                                <a href=\"https://github.com/Jaymak1981\"></a>\n                            </li>\n                            {/* <li className=\"list-unstyled\">\n                                <a href=\"#!\">Link 4</a>\n                            </li> */}\n                        </ul>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n            <div className=\"footer-copyright text-center py-3\">\n                <MDBContainer fluid>\n                    &copy; {new Date().getFullYear()} Copyright: <a href=\"https://www.mdbootstrap.com\"> </a>\n                </MDBContainer>\n            </div>\n        </MDBFooter>\n    );\n}\n\nexport default FooterPage;","import React from 'react';\n// import About from './About';\nimport Projects from './Projects';\nimport Contact from './Contact';\nimport NavBar from './NavBar';\nimport Footer from './Footer';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      {/* <About /> */}\n      <Projects />\n      <Contact />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}